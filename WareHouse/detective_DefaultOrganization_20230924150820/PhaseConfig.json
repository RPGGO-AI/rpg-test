{
  "DemandAnalysis": {
    "assistant_role_name": "Chief Product Officer",
    "user_role_name": "Chief Executive Officer",
    "phase_prompt": [
      "ChatDev has made products in the following form before:",
      "Image: can present information in line chart, bar chart, flow chart, cloud chart, Gantt chart, etc.",
      "Document: can present information via .docx files.",
      "PowerPoint: can present information via .pptx files.",
      "Excel: can present information via .xlsx files.",
      "PDF: can present information via .pdf files.",
      "Website: can present personal resume, tutorial, products, or ideas, via .html files.",
      "Application: can implement visualized game, software, tool, etc, via python.",
      "Dashboard: can display a panel visualizing real-time information.",
      "Mind Map: can represent ideas, with related concepts arranged around a core concept.",
      "As the {assistant_role}, to satisfy the new user's demand and the product should be realizable, you should keep discussing with me to decide which product modality do we want the product to be?",
      "Note that we must ONLY discuss the product modality and do not discuss anything else! Once we all have expressed our opinion(s) and agree with the results of the discussion unanimously, any of us must actively terminate the discussion by replying with only one line, which starts with a single word <INFO>, followed by our final product modality without any other words, e.g., \"<INFO> PowerPoint\"."
    ]
  },
  "LanguageChoose": {
    "assistant_role_name": "Chief Product Officer",
    "user_role_name": "Chief Executive Officer",
    "phase_prompt": [
      "According to the new user's task and some creative brainstorm ideas listed below: ",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Ideas: \"{ideas}\".",
      "We have decided to complete the task through a rpg game via interactive experience. ",
      "As the {assistant_role}, to satisfy the new user's demand and make the story playable for user, you should propose a concrete user language to write the game. ",
      "Note that we must ONLY discuss the target language and do not discuss anything else! Once we all have expressed our opinion(s) and agree with the results of the discussion unanimously, any of us must actively terminate the discussion and conclude the best language we have discussed without any other words or reasons, return only one line using the format: \"<INFO> *\" where \"*\" represents a language."
    ]
  },
  "Coding": {
    "assistant_role_name": "Game Scene Writer",
    "user_role_name": "Chief Game Designer",
    "phase_prompt": [
      "According to the new user's task and our software designs listed below: ",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Language: \"{language}\"",
      "Ideas:\"{ideas}\"",
      "We have decided to complete the task through a rpg game via {language}. As the {assistant_role}, to satisfy the new user's demands, you should write one or multiple scenes to construct the rpg game and make sure that every detail of the scene is, in the end, implemented as text. {gui}",
      "Think step by step and reason yourself to the right decisions to make sure we get it right.",
      "You will first lay out the names of the game, goal, characters, background, props that will be necessary, as well as a quick comment on their purpose.",
      "Then you will output the content of each file including complete design and description. Each file must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is the lowercase file name including the file extension, \"LANGUAGE\" in the language, \"DOCSTRING\" is a string literal specified in source that is used to document a specific segment of text, and \"SCENE\" is the original designed game script text:",
      "FILENAME",
      "```LANGUAGE",
      "'''",
      "DOCSTRING",
      "'''",
      "SCENE",
      "```",
      "You will start with the \"main\" file, then go to the ones that are imported by that file, and so on.",
      "Please note that the scene should be fully playable. Ensure to design all the details around the story and character. No placeholders."
    ]
  },
  
  "CodeComplete": {
    "assistant_role_name": "Game Scene Writer",
    "user_role_name": "Chief Game Designer",
    "phase_prompt": [
      "According to the new user's task and our software designs listed below: ",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Language: \"{language}\"",
      "Scenes:",
      "\"{scenes}\"",
      "Unimplemented File:",
      "\"{unimplemented_file}\"",
      "In our game, each file must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is the lowercase file name including the file extension, \"LANGUAGE\" in the user language, \"DOCSTRING\" is a string literal specified in source that is used to document a specific segment of text, and \"SCENE\" is the original designed game script text:",
      "FILENAME",
      "```LANGUAGE",
      "'''",
      "DOCSTRING",
      "'''",
      "SCENE",
      "```",
      "As the {assistant_role}, to satisfy the complete function of our RPG game, you have to implement all methods in the {unimplemented_file} file which contains a unimplemented scene. Now, implement all methods of the {unimplemented_file} and all other scenes needed, then output the fully implemented scene, strictly following the required format."
    ]
  },
  "CodeReviewComment": {
    "assistant_role_name": "Game Reviewer",
    "user_role_name": "Game Scene Writer",
    "phase_prompt": [
      "According to the new user's task and our software designs: ",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Language: \"{language}\"",
      "Ideas: \"{ideas}\"",
      "Scenes:",
      "\"{scenes}\"",
      "As the {assistant_role}, to make the software directly operable without further coding, ChatDev have formulated the following regulations:",
      "1) all scene should have a goal",
      "2) all scene should have characters, and new character should have background desscription",
      "3) all scene should have background story;",
      "4) no potential logical bugs;",
      "5) The entire project conforms to the tasks proposed by the user;",
      "6) most importantly, do not only check the errors in the scene, but also the logic of scene. Make sure that user can interact with generated rpg scene without losing any feature in the requirement;",
      "Now, you should check the above regulations one by one and review the scenes in detail, propose one comment with the highest priority about the scenes, and give me instructions on how to fix. Tell me your comment with the highest priority and corresponding suggestions on revision. If the scenes are perfect and you have no comment on them, return only one line like \"<INFO> Finished\"."
    ]
  },
  "CodeReviewModification": {
    "assistant_role_name": "Game Scene Writer",
    "user_role_name": "Game Reviewer",
    "phase_prompt": [
      "According to the new user's task, our designed product modality, languages and ideas, our developed first-edition scenes are listed below: ",
      "Task: \"{task}\".",
      "Modality: \"{modality}\".",
      "Language: \"{language}\"",
      "Ideas: \"{ideas}\"",
      "Scenes: ",
      "\"{scenes}\"",
      "Comments on Scenes:",
      "\"{comments}\"",
      "In the software, each file must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is the lowercase file name including the file extension, \"LANGUAGE\" in the language, \"DOCSTRING\" is a string literal specified in source that is used to document a specific segment of scene, and \"SCENE\" is the original designed game script. Format:",
      "FILENAME",
      "```LANGUAGE",
      "'''",
      "DOCSTRING",
      "'''",
      "SCENE",
      "```",
      "As the {assistant_role}, to satisfy the new user's demand and make the software creative, executive and robust, you should modify corresponding scenes according to the comments. Then, output the full and complete scenes with all bugs fixed based on the comments. Return all scenes strictly following the required format."
    ]
  }
}